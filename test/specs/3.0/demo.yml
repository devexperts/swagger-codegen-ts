openapi: '3.0.2'
info:
  version: 1.0.0
  title: Swagger Petstore
paths:
  /test/{pathParam}/${inlinePathParam}:
    get:
      parameters:
        - $ref: '#/components/parameters/PathParam'
        - $ref: '#/components/parameters/QueryParam'
        - name: inlinePathParam
          in: path
          required: true
          schema:
            type: string
        - name: inlineQueryParam
          in: query
          required: true
          schema:
            type: number
        - name: 37sds afd,asd.324sfa as2_+=
          in: query
          required: true
          schema:
            type: number
        - name: 37sds afd,sadfsdfasd.324sfa as2_+=
          in: path
          required: true
          schema:
            type: number
        - in: header
          name: Custom-Header
          required: true
          schema:
            type: string
        - in: header
          name: Custom-Header-Two
          required: false
          schema:
            type: string
        - in: header
          name: Custom-Header-Three
          required: true
          schema:
            type: array
            items:
              type: string
      requestBody:
        description: inline request body
        content:
          application/json:
            schema:
              type: string
      operationId: test
      responses:
        200:
          $ref: '#/components/responses/Successful'
        201:
          $ref: '#/components/schemas/37sds afd,asd.324sfa as2_+='
        404:
          $ref: '#/components/responses/NotFound'
        400:
          $ref: '#/components/responses/IllegalInput'
        500:
          $ref: '#/components/responses/GeneralErrorResponse'
    post:
      operationId: testSharedParameters
      requestBody:
        $ref: '#/components/requestBodies/RefRequestBody'
      responses:
        200:
          $ref: '#/components/responses/Successful'
          404:
            $ref: '#/components/responses/NotFound'
          400:
            $ref: '#/components/responses/IllegalInput'
          500:
            $ref: '#/components/responses/GeneralErrorResponse'
    parameters:
      - $ref: '#/components/parameters/PathParam'
      - $ref: '#/components/parameters/QueryParam'
      - name: inlinePathParam
        in: path
        required: true
        schema:
          type: string
      - name: inlineQueryParam
        in: query
        required: true
        schema:
          type: number
  /shared-path-item:
    $ref: '../arbitrary.yml#/SharedPathItem'
components:
  parameters:
    PathParam:
      $ref: './arbitrary.yml#/parameters/PathParam'
    QueryParam:
      name: queryParam
      in: query
      schema:
        type: number
    HeaderParam:
      name: headerParam
      in: header
      schema:
        type: boolean
  responses:
    Successful:
      $ref: './arbitrary.yml#/responses/Successful'
    NotFound:
      description: Entity not found.
    IllegalInput:
      description: Illegal input for operation.
    GeneralErrorResponse:
      description: General Error
      schema:
        $ref: '#/components/definitions/GeneralError'
  schemas:
    GeneralError:
      $ref: './arbitrary.yml#/schemas/GeneralError'
    TestAllOf:
      allOf:
        - $ref: '#/components/schemas/GeneralError'
        - type: 'object'
          properties:
            foo:
              type: 'string'
            self:
              $ref: '#/components/schemas/TestAllOf'
            kebab-property:
              type: string
    TestAnyOf:
      anyOf:
        - type: object
          properties:
            bark:
              type: string
        - type: object
          properties:
            meow:
              type: string
    TestOneOf:
      oneOf:
        - type: object
          properties:
            bark:
              type: string
        - type: object
          properties:
            meow:
              type: string
    TestOneOfDiscriminated:
      oneOf:
        - type: object
          properties:
            kind:
              enum: [ dog ]
            bark:
              type: string
          required: [ kind ]
        - type: object
          properties:
            kind:
              enum: [ cat ]
            meow:
              type: string
          required: [ kind ]
    37sds afd,asd.324sfa as2_+=:
      type: object
      properties:
        self:
          $ref: '#/components/schemas/37sds afd,asd.324sfa as2_+='
    TestNonEmpty:
      type: array
      minItems: 1
      items:
        type: object
        properties:
          foo:
            type: string
          bar:
            type: number
    TestArrayWithMinItems0:
      type: array
      minItems: 0
      items:
        type: object
        properties:
          foo:
            type: string
          bar:
            type: number
    TestNonEmptyRef:
      type: array
      minItems: 1
      items:
        $ref: "#/components/schemas/TestAllOf"
    TestNullable:
      type: array
      nullable: true
      items:
        type: array
        items:
          type: string
          nullable: true
    TestDate:
      type: object
      properties:
        foo:
          type: string
          format: date
        bar:
          type: string
          format: date-time
  requestBodies:
    RefRequestBody:
      description: ref request body
      content:
        application/json:
          schema:
            type: string
